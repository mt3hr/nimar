// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: nimar.proto

package nimar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_MessageAgari        MessageType = 0
	MessageType_MessageKyushuKyuhai MessageType = 1
	MessageType_MessageSukaikan     MessageType = 2
	MessageType_MessageRyukyoku     MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MessageAgari",
		1: "MessageKyushuKyuhai",
		2: "MessageSukaikan",
		3: "MessageRyukyoku",
	}
	MessageType_value = map[string]int32{
		"MessageAgari":        0,
		"MessageKyushuKyuhai": 1,
		"MessageSukaikan":     2,
		"MessageRyukyoku":     3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_nimar_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_nimar_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{0}
}

type Suit int32

const (
	Suit_NONE  Suit = 0
	Suit_MANZU Suit = 1
	Suit_SOZU  Suit = 2
	Suit_PINZU Suit = 3
	Suit_TON   Suit = 4
	Suit_NAN   Suit = 5
	Suit_SHA   Suit = 6
	Suit_PE    Suit = 7
	Suit_HAKU  Suit = 8
	Suit_HATSU Suit = 9
	Suit_CHUN  Suit = 10
)

// Enum value maps for Suit.
var (
	Suit_name = map[int32]string{
		0:  "NONE",
		1:  "MANZU",
		2:  "SOZU",
		3:  "PINZU",
		4:  "TON",
		5:  "NAN",
		6:  "SHA",
		7:  "PE",
		8:  "HAKU",
		9:  "HATSU",
		10: "CHUN",
	}
	Suit_value = map[string]int32{
		"NONE":  0,
		"MANZU": 1,
		"SOZU":  2,
		"PINZU": 3,
		"TON":   4,
		"NAN":   5,
		"SHA":   6,
		"PE":    7,
		"HAKU":  8,
		"HATSU": 9,
		"CHUN":  10,
	}
)

func (x Suit) Enum() *Suit {
	p := new(Suit)
	*p = x
	return p
}

func (x Suit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Suit) Descriptor() protoreflect.EnumDescriptor {
	return file_nimar_proto_enumTypes[1].Descriptor()
}

func (Suit) Type() protoreflect.EnumType {
	return &file_nimar_proto_enumTypes[1]
}

func (x Suit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Suit.Descriptor instead.
func (Suit) EnumDescriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{1}
}

type Kaze int32

const (
	Kaze_KAZE_TON Kaze = 0
	Kaze_KAZE_NAN Kaze = 2
	Kaze_KAZE_SHA Kaze = 3
	Kaze_KAZE_PE  Kaze = 4
)

// Enum value maps for Kaze.
var (
	Kaze_name = map[int32]string{
		0: "KAZE_TON",
		2: "KAZE_NAN",
		3: "KAZE_SHA",
		4: "KAZE_PE",
	}
	Kaze_value = map[string]int32{
		"KAZE_TON": 0,
		"KAZE_NAN": 2,
		"KAZE_SHA": 3,
		"KAZE_PE":  4,
	}
)

func (x Kaze) Enum() *Kaze {
	p := new(Kaze)
	*p = x
	return p
}

func (x Kaze) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kaze) Descriptor() protoreflect.EnumDescriptor {
	return file_nimar_proto_enumTypes[2].Descriptor()
}

func (Kaze) Type() protoreflect.EnumType {
	return &file_nimar_proto_enumTypes[2]
}

func (x Kaze) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kaze.Descriptor instead.
func (Kaze) EnumDescriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{2}
}

type OpenType int32

const (
	OpenType_OPEN_NULL      OpenType = 0
	OpenType_OPEN_PON       OpenType = 1
	OpenType_OPEN_CHI       OpenType = 2
	OpenType_OPEN_ANKAN     OpenType = 3
	OpenType_OPEN_DAIMINKAN OpenType = 4
	OpenType_OPEN_KAKAN     OpenType = 5
	OpenType_OPEN_PE        OpenType = 6
)

// Enum value maps for OpenType.
var (
	OpenType_name = map[int32]string{
		0: "OPEN_NULL",
		1: "OPEN_PON",
		2: "OPEN_CHI",
		3: "OPEN_ANKAN",
		4: "OPEN_DAIMINKAN",
		5: "OPEN_KAKAN",
		6: "OPEN_PE",
	}
	OpenType_value = map[string]int32{
		"OPEN_NULL":      0,
		"OPEN_PON":       1,
		"OPEN_CHI":       2,
		"OPEN_ANKAN":     3,
		"OPEN_DAIMINKAN": 4,
		"OPEN_KAKAN":     5,
		"OPEN_PE":        6,
	}
)

func (x OpenType) Enum() *OpenType {
	p := new(OpenType)
	*p = x
	return p
}

func (x OpenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenType) Descriptor() protoreflect.EnumDescriptor {
	return file_nimar_proto_enumTypes[3].Descriptor()
}

func (OpenType) Type() protoreflect.EnumType {
	return &file_nimar_proto_enumTypes[3]
}

func (x OpenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpenType.Descriptor instead.
func (OpenType) EnumDescriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{3}
}

type OperatorType int32

const (
	OperatorType_OPERATOR_START_GAME   OperatorType = 0
	OperatorType_OPERATOR_SKIP         OperatorType = 1
	OperatorType_OPERATOR_DRAW         OperatorType = 2
	OperatorType_OPERATOR_DAHAI        OperatorType = 3
	OperatorType_OPERATOR_RON          OperatorType = 4
	OperatorType_OPERATOR_PON          OperatorType = 5
	OperatorType_OPERATOR_CHI          OperatorType = 6
	OperatorType_OPERATOR_DAIMINKAN    OperatorType = 7
	OperatorType_OPERATOR_TSUMO        OperatorType = 8
	OperatorType_OPERATOR_ANKAN        OperatorType = 9
	OperatorType_OPERATOR_KAKAN        OperatorType = 10
	OperatorType_OPERATOR_PE           OperatorType = 11
	OperatorType_OPERATOR_KYUSHUKYUHAI OperatorType = 12
	OperatorType_OPERATOR_REACH        OperatorType = 13
	OperatorType_OPERATOR_OK           OperatorType = 14
)

// Enum value maps for OperatorType.
var (
	OperatorType_name = map[int32]string{
		0:  "OPERATOR_START_GAME",
		1:  "OPERATOR_SKIP",
		2:  "OPERATOR_DRAW",
		3:  "OPERATOR_DAHAI",
		4:  "OPERATOR_RON",
		5:  "OPERATOR_PON",
		6:  "OPERATOR_CHI",
		7:  "OPERATOR_DAIMINKAN",
		8:  "OPERATOR_TSUMO",
		9:  "OPERATOR_ANKAN",
		10: "OPERATOR_KAKAN",
		11: "OPERATOR_PE",
		12: "OPERATOR_KYUSHUKYUHAI",
		13: "OPERATOR_REACH",
		14: "OPERATOR_OK",
	}
	OperatorType_value = map[string]int32{
		"OPERATOR_START_GAME":   0,
		"OPERATOR_SKIP":         1,
		"OPERATOR_DRAW":         2,
		"OPERATOR_DAHAI":        3,
		"OPERATOR_RON":          4,
		"OPERATOR_PON":          5,
		"OPERATOR_CHI":          6,
		"OPERATOR_DAIMINKAN":    7,
		"OPERATOR_TSUMO":        8,
		"OPERATOR_ANKAN":        9,
		"OPERATOR_KAKAN":        10,
		"OPERATOR_PE":           11,
		"OPERATOR_KYUSHUKYUHAI": 12,
		"OPERATOR_REACH":        13,
		"OPERATOR_OK":           14,
	}
)

func (x OperatorType) Enum() *OperatorType {
	p := new(OperatorType)
	*p = x
	return p
}

func (x OperatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_nimar_proto_enumTypes[4].Descriptor()
}

func (OperatorType) Type() protoreflect.EnumType {
	return &file_nimar_proto_enumTypes[4]
}

func (x OperatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatorType.Descriptor instead.
func (OperatorType) EnumDescriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{4}
}

type Yaku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Han  int64  `protobuf:"varint,2,opt,name=han,proto3" json:"han,omitempty"`
}

func (x *Yaku) Reset() {
	*x = Yaku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Yaku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Yaku) ProtoMessage() {}

func (x *Yaku) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Yaku.ProtoReflect.Descriptor instead.
func (*Yaku) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{0}
}

func (x *Yaku) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Yaku) GetHan() int64 {
	if x != nil {
		return x.Han
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalHu    int64   `protobuf:"varint,1,opt,name=totalHu,proto3" json:"totalHu,omitempty"`
	TotalHan   int64   `protobuf:"varint,2,opt,name=totalHan,proto3" json:"totalHan,omitempty"`
	TotalPoint int64   `protobuf:"varint,3,opt,name=totalPoint,proto3" json:"totalPoint,omitempty"`
	MatchYakus []*Yaku `protobuf:"bytes,4,rep,name=matchYakus,proto3" json:"matchYakus,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetTotalHu() int64 {
	if x != nil {
		return x.TotalHu
	}
	return 0
}

func (x *Point) GetTotalHan() int64 {
	if x != nil {
		return x.TotalHan
	}
	return 0
}

func (x *Point) GetTotalPoint() int64 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *Point) GetMatchYakus() []*Yaku {
	if x != nil {
		return x.MatchYakus
	}
	return nil
}

type Agari struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Hand        *Tiles       `protobuf:"bytes,3,opt,name=hand,proto3" json:"hand,omitempty"`
	TsumoriTile *Tile        `protobuf:"bytes,4,opt,name=tsumoriTile,proto3" json:"tsumoriTile,omitempty"`
	RonTile     *Tile        `protobuf:"bytes,5,opt,name=ronTile,proto3" json:"ronTile,omitempty"`
	OpenedTile1 *OpenedTiles `protobuf:"bytes,6,opt,name=openedTile1,proto3" json:"openedTile1,omitempty"`
	OpenedTile2 *OpenedTiles `protobuf:"bytes,7,opt,name=openedTile2,proto3" json:"openedTile2,omitempty"`
	OpenedTile3 *OpenedTiles `protobuf:"bytes,8,opt,name=openedTile3,proto3" json:"openedTile3,omitempty"`
	OpenedTile4 *OpenedTiles `protobuf:"bytes,9,opt,name=openedTile4,proto3" json:"openedTile4,omitempty"`
	Pe          *OpenedTiles `protobuf:"bytes,10,opt,name=pe,proto3" json:"pe,omitempty"`
	Point       *Point       `protobuf:"bytes,11,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *Agari) Reset() {
	*x = Agari{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agari) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agari) ProtoMessage() {}

func (x *Agari) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agari.ProtoReflect.Descriptor instead.
func (*Agari) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{2}
}

func (x *Agari) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agari) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agari) GetHand() *Tiles {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *Agari) GetTsumoriTile() *Tile {
	if x != nil {
		return x.TsumoriTile
	}
	return nil
}

func (x *Agari) GetRonTile() *Tile {
	if x != nil {
		return x.RonTile
	}
	return nil
}

func (x *Agari) GetOpenedTile1() *OpenedTiles {
	if x != nil {
		return x.OpenedTile1
	}
	return nil
}

func (x *Agari) GetOpenedTile2() *OpenedTiles {
	if x != nil {
		return x.OpenedTile2
	}
	return nil
}

func (x *Agari) GetOpenedTile3() *OpenedTiles {
	if x != nil {
		return x.OpenedTile3
	}
	return nil
}

func (x *Agari) GetOpenedTile4() *OpenedTiles {
	if x != nil {
		return x.OpenedTile4
	}
	return nil
}

func (x *Agari) GetPe() *OpenedTiles {
	if x != nil {
		return x.Pe
	}
	return nil
}

func (x *Agari) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=MessageType" json:"messageType,omitempty"`
	Agari       *Agari      `protobuf:"bytes,2,opt,name=agari,proto3" json:"agari,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_MessageAgari
}

func (x *Message) GetAgari() *Agari {
	if x != nil {
		return x.Agari
	}
	return nil
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomName string `protobuf:"bytes,1,opt,name=roomName,proto3" json:"roomName,omitempty"`
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoomRequest) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID      string   `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	RoomName    string   `protobuf:"bytes,2,opt,name=roomName,proto3" json:"roomName,omitempty"`
	PlayerNames []string `protobuf:"bytes,3,rep,name=playerNames,proto3" json:"playerNames,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{5}
}

func (x *Room) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *Room) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *Room) GetPlayerNames() []string {
	if x != nil {
		return x.PlayerNames
	}
	return nil
}

type Rooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *Rooms) Reset() {
	*x = Rooms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rooms) ProtoMessage() {}

func (x *Rooms) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rooms.ProtoReflect.Descriptor instead.
func (*Rooms) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{6}
}

func (x *Rooms) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID   string `protobuf:"bytes,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=playerName,proto3" json:"playerName,omitempty"`
	RoomID     string `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{7}
}

func (x *JoinRoomRequest) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *JoinRoomRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *JoinRoomRequest) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type TableStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kaze Kaze `protobuf:"varint,1,opt,name=kaze,proto3,enum=Kaze" json:"kaze,omitempty"`
}

func (x *TableStatus) Reset() {
	*x = TableStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStatus) ProtoMessage() {}

func (x *TableStatus) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStatus.ProtoReflect.Descriptor instead.
func (*TableStatus) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{8}
}

func (x *TableStatus) GetKaze() Kaze {
	if x != nil {
		return x.Kaze
	}
	return Kaze_KAZE_TON
}

type GameTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsumo   *Tsumo  `protobuf:"bytes,1,opt,name=tsumo,proto3" json:"tsumo,omitempty"`
	Player1 *Player `protobuf:"bytes,2,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2 *Player `protobuf:"bytes,3,opt,name=player2,proto3" json:"player2,omitempty"`
}

func (x *GameTable) Reset() {
	*x = GameTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameTable) ProtoMessage() {}

func (x *GameTable) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameTable.ProtoReflect.Descriptor instead.
func (*GameTable) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{9}
}

func (x *GameTable) GetTsumo() *Tsumo {
	if x != nil {
		return x.Tsumo
	}
	return nil
}

func (x *GameTable) GetPlayer1() *Player {
	if x != nil {
		return x.Player1
	}
	return nil
}

func (x *GameTable) GetPlayer2() *Player {
	if x != nil {
		return x.Player2
	}
	return nil
}

type Tsumo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles *Tiles `protobuf:"bytes,1,opt,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *Tsumo) Reset() {
	*x = Tsumo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tsumo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tsumo) ProtoMessage() {}

func (x *Tsumo) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tsumo.ProtoReflect.Descriptor instead.
func (*Tsumo) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{10}
}

func (x *Tsumo) GetTiles() *Tiles {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type Tiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles []*Tile `protobuf:"bytes,1,rep,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *Tiles) Reset() {
	*x = Tiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tiles) ProtoMessage() {}

func (x *Tiles) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tiles.ProtoReflect.Descriptor instead.
func (*Tiles) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{11}
}

func (x *Tiles) GetTiles() []*Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Num     int64  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Suit    Suit   `protobuf:"varint,4,opt,name=suit,proto3,enum=Suit" json:"suit,omitempty"`
	Dora    bool   `protobuf:"varint,5,opt,name=dora,proto3" json:"dora,omitempty"`
	Akadora bool   `protobuf:"varint,6,opt,name=akadora,proto3" json:"akadora,omitempty"`
}

func (x *Tile) Reset() {
	*x = Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{12}
}

func (x *Tile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tile) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Tile) GetSuit() Suit {
	if x != nil {
		return x.Suit
	}
	return Suit_NONE
}

func (x *Tile) GetDora() bool {
	if x != nil {
		return x.Dora
	}
	return false
}

func (x *Tile) GetAkadora() bool {
	if x != nil {
		return x.Akadora
	}
	return false
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Hand        *Tiles       `protobuf:"bytes,3,opt,name=hand,proto3" json:"hand,omitempty"`
	TsumoriTile *Tile        `protobuf:"bytes,4,opt,name=tsumoriTile,proto3" json:"tsumoriTile,omitempty"`
	OpenedTile1 *OpenedTiles `protobuf:"bytes,5,opt,name=openedTile1,proto3" json:"openedTile1,omitempty"`
	OpenedTile2 *OpenedTiles `protobuf:"bytes,6,opt,name=openedTile2,proto3" json:"openedTile2,omitempty"`
	OpenedTile3 *OpenedTiles `protobuf:"bytes,7,opt,name=openedTile3,proto3" json:"openedTile3,omitempty"`
	OpenedTile4 *OpenedTiles `protobuf:"bytes,8,opt,name=openedTile4,proto3" json:"openedTile4,omitempty"`
	Pe          *OpenedTiles `protobuf:"bytes,9,opt,name=pe,proto3" json:"pe,omitempty"`
	Kawa        *Tiles       `protobuf:"bytes,10,opt,name=kawa,proto3" json:"kawa,omitempty"`
	Kaze        Kaze         `protobuf:"varint,11,opt,name=kaze,proto3,enum=Kaze" json:"kaze,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{13}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetHand() *Tiles {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *Player) GetTsumoriTile() *Tile {
	if x != nil {
		return x.TsumoriTile
	}
	return nil
}

func (x *Player) GetOpenedTile1() *OpenedTiles {
	if x != nil {
		return x.OpenedTile1
	}
	return nil
}

func (x *Player) GetOpenedTile2() *OpenedTiles {
	if x != nil {
		return x.OpenedTile2
	}
	return nil
}

func (x *Player) GetOpenedTile3() *OpenedTiles {
	if x != nil {
		return x.OpenedTile3
	}
	return nil
}

func (x *Player) GetOpenedTile4() *OpenedTiles {
	if x != nil {
		return x.OpenedTile4
	}
	return nil
}

func (x *Player) GetPe() *OpenedTiles {
	if x != nil {
		return x.Pe
	}
	return nil
}

func (x *Player) GetKawa() *Tiles {
	if x != nil {
		return x.Kawa
	}
	return nil
}

func (x *Player) GetKaze() Kaze {
	if x != nil {
		return x.Kaze
	}
	return Kaze_KAZE_TON
}

type OpenedTiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenType OpenType `protobuf:"varint,1,opt,name=openType,proto3,enum=OpenType" json:"openType,omitempty"`
	Tiles    *Tiles   `protobuf:"bytes,2,opt,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *OpenedTiles) Reset() {
	*x = OpenedTiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenedTiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenedTiles) ProtoMessage() {}

func (x *OpenedTiles) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenedTiles.ProtoReflect.Descriptor instead.
func (*OpenedTiles) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{14}
}

func (x *OpenedTiles) GetOpenType() OpenType {
	if x != nil {
		return x.OpenType
	}
	return OpenType_OPEN_NULL
}

func (x *OpenedTiles) GetTiles() *Tiles {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type PlayerID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playerid string `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"`
}

func (x *PlayerID) Reset() {
	*x = PlayerID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerID) ProtoMessage() {}

func (x *PlayerID) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerID.ProtoReflect.Descriptor instead.
func (*PlayerID) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{15}
}

func (x *PlayerID) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

type Operators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operators []*Operator `protobuf:"bytes,2,rep,name=operators,proto3" json:"operators,omitempty"`
}

func (x *Operators) Reset() {
	*x = Operators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operators) ProtoMessage() {}

func (x *Operators) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operators.ProtoReflect.Descriptor instead.
func (*Operators) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{16}
}

func (x *Operators) GetOperators() []*Operator {
	if x != nil {
		return x.Operators
	}
	return nil
}

type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID       string       `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	PlayerID     string       `protobuf:"bytes,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	OperatorType OperatorType `protobuf:"varint,3,opt,name=operatorType,proto3,enum=OperatorType" json:"operatorType,omitempty"`
	TargetTiles  *Tiles       `protobuf:"bytes,4,opt,name=targetTiles,proto3" json:"targetTiles,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nimar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_nimar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_nimar_proto_rawDescGZIP(), []int{17}
}

func (x *Operator) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *Operator) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *Operator) GetOperatorType() OperatorType {
	if x != nil {
		return x.OperatorType
	}
	return OperatorType_OPERATOR_START_GAME
}

func (x *Operator) GetTargetTiles() *Tiles {
	if x != nil {
		return x.TargetTiles
	}
	return nil
}

var File_nimar_proto protoreflect.FileDescriptor

var file_nimar_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6e, 0x69, 0x6d, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x04, 0x59, 0x61,
	0x6b, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x68, 0x61, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x05, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x75, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x59, 0x61, 0x6b, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x59,
	0x61, 0x6b, 0x75, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x59, 0x61, 0x6b, 0x75, 0x73, 0x22,
	0x8d, 0x03, 0x0a, 0x05, 0x41, 0x67, 0x61, 0x72, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x74, 0x73, 0x75,
	0x6d, 0x6f, 0x72, 0x69, 0x54, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x72, 0x69, 0x54, 0x69,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x72, 0x6f, 0x6e, 0x54, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x72, 0x6f, 0x6e, 0x54,
	0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c,
	0x65, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69,
	0x6c, 0x65, 0x31, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c,
	0x65, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69,
	0x6c, 0x65, 0x32, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c,
	0x65, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69,
	0x6c, 0x65, 0x33, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c,
	0x65, 0x34, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65,
	0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69,
	0x6c, 0x65, 0x34, 0x12, 0x1c, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x02, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22,
	0x57, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x61, 0x67,
	0x61, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x67, 0x61, 0x72,
	0x69, 0x52, 0x05, 0x61, 0x67, 0x61, 0x72, 0x69, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x04, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x05, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x1b, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x65, 0x0a,
	0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x6b, 0x61, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x05, 0x2e, 0x4b, 0x61, 0x7a, 0x65, 0x52, 0x04, 0x6b, 0x61, 0x7a, 0x65, 0x22, 0x6f,
	0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x74,
	0x73, 0x75, 0x6d, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x73, 0x75,
	0x6d, 0x6f, 0x52, 0x05, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12, 0x21, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x22,
	0x25, 0x0a, 0x05, 0x54, 0x73, 0x75, 0x6d, 0x6f, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x05, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x04, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x73,
	0x75, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x53, 0x75, 0x69, 0x74,
	0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6b,
	0x61, 0x64, 0x6f, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6b, 0x61,
	0x64, 0x6f, 0x72, 0x61, 0x22, 0x86, 0x03, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12,
	0x27, 0x0a, 0x0b, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x72, 0x69, 0x54, 0x69, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x74, 0x73, 0x75,
	0x6d, 0x6f, 0x72, 0x69, 0x54, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x31, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x32, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x33, 0x12, 0x2e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x34, 0x12, 0x1c, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x02, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6b, 0x61, 0x77, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x6b, 0x61,
	0x77, 0x61, 0x12, 0x19, 0x0a, 0x04, 0x6b, 0x61, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x05, 0x2e, 0x4b, 0x61, 0x7a, 0x65, 0x52, 0x04, 0x6b, 0x61, 0x7a, 0x65, 0x22, 0x52, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x31, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x2a, 0x62, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x67, 0x61, 0x72, 0x69, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x79, 0x75, 0x73, 0x68, 0x75, 0x4b,
	0x79, 0x75, 0x68, 0x61, 0x69, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x75, 0x6b, 0x61, 0x69, 0x6b, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x79, 0x75, 0x6b, 0x79, 0x6f, 0x6b, 0x75, 0x10,
	0x03, 0x2a, 0x72, 0x0a, 0x04, 0x53, 0x75, 0x69, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x4e, 0x5a, 0x55, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x4f, 0x5a, 0x55, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x49, 0x4e, 0x5a,
	0x55, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x48, 0x41, 0x10, 0x06, 0x12, 0x06,
	0x0a, 0x02, 0x50, 0x45, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x4b, 0x55, 0x10, 0x08,
	0x12, 0x09, 0x0a, 0x05, 0x48, 0x41, 0x54, 0x53, 0x55, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x43,
	0x48, 0x55, 0x4e, 0x10, 0x0a, 0x2a, 0x3d, 0x0a, 0x04, 0x4b, 0x61, 0x7a, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x4b, 0x41, 0x5a, 0x45, 0x5f, 0x54, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4b,
	0x41, 0x5a, 0x45, 0x5f, 0x4e, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x41, 0x5a,
	0x45, 0x5f, 0x53, 0x48, 0x41, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x41, 0x5a, 0x45, 0x5f,
	0x50, 0x45, 0x10, 0x04, 0x2a, 0x76, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x50, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43, 0x48, 0x49, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x41, 0x4e, 0x4b, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x44, 0x41, 0x49, 0x4d, 0x49, 0x4e, 0x4b, 0x41, 0x4e, 0x10, 0x04, 0x12,
	0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x4b, 0x41, 0x4b, 0x41, 0x4e, 0x10, 0x05, 0x12,
	0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x50, 0x45, 0x10, 0x06, 0x2a, 0xbc, 0x02, 0x0a,
	0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x44, 0x41, 0x48, 0x41, 0x49, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x4f, 0x4e,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x50,
	0x4f, 0x4e, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52,
	0x5f, 0x43, 0x48, 0x49, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x44, 0x41, 0x49, 0x4d, 0x49, 0x4e, 0x4b, 0x41, 0x4e, 0x10, 0x07, 0x12, 0x12,
	0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x53, 0x55, 0x4d, 0x4f,
	0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x41,
	0x4e, 0x4b, 0x41, 0x4e, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x4b, 0x41, 0x4b, 0x41, 0x4e, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x45, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4b, 0x59, 0x55, 0x53, 0x48, 0x55, 0x4b, 0x59,
	0x55, 0x48, 0x41, 0x49, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4f, 0x4b, 0x10, 0x0e, 0x32, 0xd2, 0x02, 0x0a, 0x05,
	0x4e, 0x69, 0x6d, 0x61, 0x52, 0x12, 0x2b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x0f, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x30,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x2d, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x10, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12,
	0x31, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x10, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x30, 0x01, 0x12, 0x2c, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x09, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x18, 0x5a, 0x16, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d,
	0x74, 0x33, 0x68, 0x72, 0x2f, 0x6e, 0x69, 0x6d, 0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_nimar_proto_rawDescOnce sync.Once
	file_nimar_proto_rawDescData = file_nimar_proto_rawDesc
)

func file_nimar_proto_rawDescGZIP() []byte {
	file_nimar_proto_rawDescOnce.Do(func() {
		file_nimar_proto_rawDescData = protoimpl.X.CompressGZIP(file_nimar_proto_rawDescData)
	})
	return file_nimar_proto_rawDescData
}

var file_nimar_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_nimar_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_nimar_proto_goTypes = []interface{}{
	(MessageType)(0),          // 0: MessageType
	(Suit)(0),                 // 1: Suit
	(Kaze)(0),                 // 2: Kaze
	(OpenType)(0),             // 3: OpenType
	(OperatorType)(0),         // 4: OperatorType
	(*Yaku)(nil),              // 5: Yaku
	(*Point)(nil),             // 6: Point
	(*Agari)(nil),             // 7: Agari
	(*Message)(nil),           // 8: Message
	(*CreateRoomRequest)(nil), // 9: CreateRoomRequest
	(*Room)(nil),              // 10: Room
	(*Rooms)(nil),             // 11: Rooms
	(*JoinRoomRequest)(nil),   // 12: JoinRoomRequest
	(*TableStatus)(nil),       // 13: TableStatus
	(*GameTable)(nil),         // 14: GameTable
	(*Tsumo)(nil),             // 15: Tsumo
	(*Tiles)(nil),             // 16: Tiles
	(*Tile)(nil),              // 17: Tile
	(*Player)(nil),            // 18: Player
	(*OpenedTiles)(nil),       // 19: OpenedTiles
	(*PlayerID)(nil),          // 20: PlayerID
	(*Operators)(nil),         // 21: Operators
	(*Operator)(nil),          // 22: Operator
	(*emptypb.Empty)(nil),     // 23: google.protobuf.Empty
}
var file_nimar_proto_depIdxs = []int32{
	5,  // 0: Point.matchYakus:type_name -> Yaku
	16, // 1: Agari.hand:type_name -> Tiles
	17, // 2: Agari.tsumoriTile:type_name -> Tile
	17, // 3: Agari.ronTile:type_name -> Tile
	19, // 4: Agari.openedTile1:type_name -> OpenedTiles
	19, // 5: Agari.openedTile2:type_name -> OpenedTiles
	19, // 6: Agari.openedTile3:type_name -> OpenedTiles
	19, // 7: Agari.openedTile4:type_name -> OpenedTiles
	19, // 8: Agari.pe:type_name -> OpenedTiles
	6,  // 9: Agari.point:type_name -> Point
	0,  // 10: Message.messageType:type_name -> MessageType
	7,  // 11: Message.agari:type_name -> Agari
	10, // 12: Rooms.rooms:type_name -> Room
	2,  // 13: TableStatus.kaze:type_name -> Kaze
	15, // 14: GameTable.tsumo:type_name -> Tsumo
	18, // 15: GameTable.player1:type_name -> Player
	18, // 16: GameTable.player2:type_name -> Player
	16, // 17: Tsumo.tiles:type_name -> Tiles
	17, // 18: Tiles.tiles:type_name -> Tile
	1,  // 19: Tile.suit:type_name -> Suit
	16, // 20: Player.hand:type_name -> Tiles
	17, // 21: Player.tsumoriTile:type_name -> Tile
	19, // 22: Player.openedTile1:type_name -> OpenedTiles
	19, // 23: Player.openedTile2:type_name -> OpenedTiles
	19, // 24: Player.openedTile3:type_name -> OpenedTiles
	19, // 25: Player.openedTile4:type_name -> OpenedTiles
	19, // 26: Player.pe:type_name -> OpenedTiles
	16, // 27: Player.kawa:type_name -> Tiles
	2,  // 28: Player.kaze:type_name -> Kaze
	3,  // 29: OpenedTiles.openType:type_name -> OpenType
	16, // 30: OpenedTiles.tiles:type_name -> Tiles
	22, // 31: Operators.operators:type_name -> Operator
	4,  // 32: Operator.operatorType:type_name -> OperatorType
	16, // 33: Operator.targetTiles:type_name -> Tiles
	23, // 34: NimaR.ListRooms:input_type -> google.protobuf.Empty
	9,  // 35: NimaR.CreateRoom:input_type -> CreateRoomRequest
	12, // 36: NimaR.GameTableStream:input_type -> JoinRoomRequest
	23, // 37: NimaR.GetPlayerID:input_type -> google.protobuf.Empty
	12, // 38: NimaR.MessageStream:input_type -> JoinRoomRequest
	12, // 39: NimaR.OperatorsStream:input_type -> JoinRoomRequest
	22, // 40: NimaR.Operate:input_type -> Operator
	11, // 41: NimaR.ListRooms:output_type -> Rooms
	10, // 42: NimaR.CreateRoom:output_type -> Room
	14, // 43: NimaR.GameTableStream:output_type -> GameTable
	20, // 44: NimaR.GetPlayerID:output_type -> PlayerID
	8,  // 45: NimaR.MessageStream:output_type -> Message
	21, // 46: NimaR.OperatorsStream:output_type -> Operators
	23, // 47: NimaR.Operate:output_type -> google.protobuf.Empty
	41, // [41:48] is the sub-list for method output_type
	34, // [34:41] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_nimar_proto_init() }
func file_nimar_proto_init() {
	if File_nimar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nimar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Yaku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agari); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rooms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tsumo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenedTiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nimar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nimar_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nimar_proto_goTypes,
		DependencyIndexes: file_nimar_proto_depIdxs,
		EnumInfos:         file_nimar_proto_enumTypes,
		MessageInfos:      file_nimar_proto_msgTypes,
	}.Build()
	File_nimar_proto = out.File
	file_nimar_proto_rawDesc = nil
	file_nimar_proto_goTypes = nil
	file_nimar_proto_depIdxs = nil
}
